#+TITLE:  ORG-R-TEST
#+AUTHOR: Tobias Maier
#+EMAIL:  t.maier@kit.edu


** Plotting example
#+begin_src R :results output graphics :file mygraph.png :bg "white"
# Creating a Graph
attach(mtcars)
plot(wt, mpg)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
#+end_src

#+RESULTS:
[[file:mygraph.png]]


* Clear Data
#+BEGIN_SRC R :session
  rm(list=ls())
  getwd()
#+END_SRC

#+RESULTS:
: /home/maier/PHD/SpaceEfficientHashing/Implementation/130tests/eval

* Reading Data
#+begin_src R :session :results output
  cols <- c('it', 'al', 'bs', 'tl', 'cap', 'pre', 'n', 'tp', 'tin', 'tfi', 'unsucc', 'lost')
  grows_bfs_raw      <- read.table("../18_11/grows_bfs.time"       , comment.char = "#", col.names = cols)
  grows_rwalk_raw    <- read.table("../18_11/grows_rwalk.time"     , comment.char = "#", col.names = cols)
  grows_rwalkcyc_raw <- read.table("../18_11/grows_rwalkcyc.time", comment.char = "#", col.names = cols)
  hom2lvl_raw        <- read.table("../18_11/hom2lvl_bfs.time"   , comment.char = "#", col.names = cols)
  cuckoo_raw         <- read.table("../18_11/cuckoo_bfs.time"    , comment.char = "#", col.names = cols)
  linprob_raw        <- read.table("../18_11/linprob.time"       , comment.char = "#", col.names = cols)
  hopscotch_raw      <- read.table("../18_11/hopscotch.time"     , comment.char = "#", col.names = cols)
  spacehopscotch_raw <- read.table("../22_11/spacehopscotch.time", comment.char = "#", col.names = cols)
  ncuckoo_raw        <- read.table("../22_11/cuckoo_bfs.time"        , comment.char = "#", col.names = cols)

  loc_groupby <- function(d)
  {
      return( aggregate(d, by=list(d$bs, d$tl, d$cap, d$al), FUN=mean) )
  }

  grows_bfs      = loc_groupby(grows_bfs_raw)
  grows_rwalk    = loc_groupby(grows_rwalk_raw)
  grows_rwalkcyc = loc_groupby(grows_rwalkcyc_raw)
  hom2lvl        = loc_groupby(hom2lvl_raw)
  cuckoo         = loc_groupby(cuckoo_raw)
  linprob        = loc_groupby(linprob_raw)
  hopscotch      = loc_groupby(hopscotch_raw)
  spacehopscotch = loc_groupby(spacehopscotch_raw)
  ncuckoo        = loc_groupby(ncuckoo_raw)
#+end_src

#+RESULTS:

* Define Row Filters
#+BEGIN_SRC R :session
  maskBS <- function (d, bs = 8)
  {
      return (d$bs == bs)
  }
  maskTL <- function (d, tl = 256)
  {
      return (d$tl == tl)
  }
  maskAL <- function (d, al = 1.1)
  {
      return (d$al == al)
  }
  maskCAP <- function (d, cap = 1)
  {
      return (d$cap == cap)
  }
#+END_SRC

#+RESULTS:

* Some grows Plots
** Alpha VS TIN Details for grows
#+BEGIN_SRC R :session :results output
  #graphics :file plot.png
  t <- function (d, x,y, bla)
  {
      return (d[maskTL(d,256) & maskCAP(d,1) & maskBS(d,bla),c(x,y)]) #(maskTL(maskCAP(maskBS(d,bla),1), 256))
  }

  y='tfi'
  x='al'

  par(mfrow=c(1,2))  #two plots next to each other

  header = "Find Microbenchmark"
  xrange <- range(grows_bfs$al)
  yrange <- range(0,grows_bfs$tfi)
  plot  (xrange, yrange, col="black", type="n", main=header)
  lines(t(grows_bfs, x, y, 8 ) , col="black" , type="o")
  lines(t(grows_bfs, x, y, 4 ) , col="blue"  , type="o")
  lines(t(grows_bfs, x, y, 6 ) , col="green" , type="o")
  lines(t(grows_bfs, x, y, 12) , col="violet", type="o")
  lines(t(grows_bfs, x, y, 16) , col="orange", type="o")
  lines(t(grows_bfs, x, y, 16) , col="orange", type="o")

  lines(t(hopscotch ,x, y, 8 ) , col="red"   , type="o")
  lines(t(spacehopscotch, x, y, 8) , col="darkred", type="o")

  y='tin'
  header = "Insert Microbenchmark"
  yrange <- range(0,grows_bfs[grows_bfs$bs == 8, 'tin'])
plot  (xrange, yrange, type="n", main=header)
  #plot (t(grows_bfs, x, y, 8 ) , type="n",  ylim=c(0,500000), main=header)
  lines(t(grows_bfs, x, y, 8 ) , col="black" , type="o")
  lines(t(grows_bfs, x, y, 4 ) , col="blue"  , type="o")
  lines(t(grows_bfs, x, y, 6 ) , col="green" , type="o")
  lines(t(grows_bfs, x, y, 12) , col="violet", type="o")
  lines(t(grows_bfs, x, y, 16) , col="orange", type="o")

  lines(t(hopscotch ,x, y, 8 ) , col="red"   , type="o")
  lines(t(spacehopscotch, x, y, 8) , col="darkred", type="o")

  lines  (c(-999, 999),c(0,0), col="black" )
  #lines(t(grows_rwalkcyc), col="green")
#+END_SRC

#+RESULTS:

** Alpha VS TIN comparison non growing
#+BEGIN_SRC R :session :results output
  #graphics :file plot.png
  t <- function (d, x,y, bla)
  {
      return (d[maskTL(d,256) & maskCAP(d,100000000) & maskBS(d,bla),c(x,y)]) #(maskTL(maskCAP(maskBS(d,bla),1), 256))
  }

  par(mfrow=c(1,2))  #two plots next to each other
  alpha     <- range(grows_bfs$al)
  insert_time <- range(0, t(grows_bfs,'al','tin',8)$tin, 20000)
  find_time <- range(0,grows_bfs$tfi)

  y='tin'
  x='al'

  header = "Insert Microbenchmark"
  plot  (alpha, insert_time, col="black", type="n", main=header)
  lines(t(grows_bfs, x, y, 8 ) , col="black" , type="o")
  lines(t(grows_bfs, x, y, 4 ) , col="blue"  , type="o")
  lines(t(grows_bfs, x, y, 16) , col="orange", type="o")

  lines(t(ncuckoo  , x, y, 8)  , col="green" , type="o")
  lines(t(cuckoo   , x, y, 8)  , col="darkgreen" , type="o")

  lines(t(hopscotch ,x, y, 8 ) , col="red"   , type="o")
  lines(t(spacehopscotch, x, y, 8) , col="darkred", type="o")

  y='tfi'
  header = "Find Microbenchmark"
  plot  (alpha, find_time, type="n", main=header)
  lines(t(grows_bfs, x, y, 8 ) , col="black" , type="o")
  lines(t(grows_bfs, x, y, 4 ) , col="blue"  , type="o")
  lines(t(grows_bfs, x, y, 16) , col="orange", type="o")

  lines(t(ncuckoo  , x, y, 8)  , col="green" , type="o")
  lines(t(cuckoo   , x, y, 8)  , col="darkgreen" , type="o")

  lines(t(hopscotch ,x, y, 8 ) , col="red"   , type="o")
  lines(t(spacehopscotch, x, y, 8) , col="darkred", type="o")

  lines  (c(-999, 999),c(0,0), col="black" )
  #lines(t(grows_rwalkcyc), col="green")
#+END_SRC

#+RESULTS:


** COOL 3D Overview
#+BEGIN_SRC R :session :results output
  library(rgl)

  h <- function (d, tcol = 'red')
  {
    chose = d$cap == 1 & d$tl == 256
    plot3d ( d[chose, c('bs','al','tfi')], col=tcol, zlim=c(0,15000) )
  }

  h(grows_bfs)

#+END_SRC

#+RESULTS:


* Overall Plots

#+BEGIN_SRC R :session :results output
  t_all <- function (d)
  {
      CHOSE = d$tl == 256 & d$bs == 8
      #& d$cap == 100000000
      return (d[CHOSE, c('al', 'tin')])
  }
  plot   (t_all(grows_bfs)    , col="red", ylim=c(0,80000))
  lines(t_all(grows_rwalk)   , col="blue")
  lines(t_all(grows_rwalkcyc), col="green")
  lines(t_all(hom2lvl)       , col="orange")
  lines(t_all(cuckoo)        , col="violet")
  lines(t_all(linprob)       , col="black")
#+END_SRC

#+RESULTS:
