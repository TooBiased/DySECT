#+TITLE:  ORG-R-TEST
#+AUTHOR: Tobias Maier
#+EMAIL:  t.maier@kit.edu


** Plotting example
#+begin_src R :results output graphics :file mygraph.png :bg "white"
# Creating a Graph
attach(mtcars)
plot(wt, mpg)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
#+end_src

#+RESULTS:
[[file:mygraph.png]]


* Clear Data
#+BEGIN_SRC R :session
  rm(list=ls())
  getwd()
#+END_SRC

#+RESULTS:
: /home/maier/PHD/SpaceEfficientHashing/Implementation/130tests/eval

* Reading Data
#+begin_src R :session :results output
  cols <- c('it', 'al', 'bs', 'tl', 'cap', 'pre', 'n', 'tp', 'tin', 'tfi', 'unsucc', 'lost')
  grows_bfs_raw      <- read.table("../18_11/grows_bfs.time"       , comment.char = "#", col.names = cols)
  grows_rwalk_raw    <- read.table("../18_11/grows_rwalk.time"     , comment.char = "#", col.names = cols)
  grows_rwalkcyc_raw <- read.table("../18_11/grows_rwalkcyc.time", comment.char = "#", col.names = cols)
  hom2lvl_raw        <- read.table("../18_11/hom2lvl_bfs.time"   , comment.char = "#", col.names = cols)
  cuckoo_raw         <- read.table("../18_11/cuckoo_bfs.time"    , comment.char = "#", col.names = cols)
  linprob_raw        <- read.table("../18_11/linprob.time"       , comment.char = "#", col.names = cols)
  hopscotch_raw      <- read.table("../18_11/hopscotch.time"     , comment.char = "#", col.names = cols)

  loc_groupby <- function(d)
  {
      return( aggregate(d, by=list(d$bs, d$tl, d$cap, d$al), FUN=mean) )
  }

  grows_bfs      = loc_groupby(grows_bfs_raw)
  grows_rwalk    = loc_groupby(grows_rwalk_raw)
  grows_rwalkcyc = loc_groupby(grows_rwalkcyc_raw)
  hom2lvl        = loc_groupby(hom2lvl_raw)
  cuckoo         = loc_groupby(cuckoo_raw)
  linprob        = loc_groupby(linprob_raw)
  hopscotch      = loc_groupby(hopscotch_raw)
#+end_src

#+RESULTS:

* Define Row Filters
#+BEGIN_SRC R :session
  maskBS <- function (d, bs = 8)
  {
      return (d$bs == bs)
  }
  maskTL <- function (d, tl = 256)
  {
      return (d$tl == tl)
  }
  maskAL <- function (d, al = 1.1)
  {
      return (d$al == al)
  }
  maskCAP <- function (d, cap = 1)
  {
      return (d$cap == cap)
  }
#+END_SRC

#+RESULTS:

* Some grows Plots
** Alpha VS TIN
#+BEGIN_SRC R :session :results output
  #graphics :file plot.png
  t <- function (d, x,y, bla)
  {
      return (d[maskTL(d,256) & maskCAP(d,1) & maskBS(d,bla),c(x,y)]) #(maskTL(maskCAP(maskBS(d,bla),1), 256))
  }

  y='tfi'
  x='al'

  range_t = range(0, t(grows_bfs,x,y)[y], t(grows_rwalk,x,y)[y]) #, t(grows_rwalkcyc,x,y)[y])

  plot  (t(grows_bfs, x, y, 8 ) , col="black", ylim=c(0,16000))
  points(t(grows_bfs, x, y, 4 ) , col="blue")
  points(t(grows_bfs, x, y, 6 ) , col="green")
  points(t(grows_bfs, x, y, 12) , col="violet")
  points(t(grows_bfs, x, y, 16) , col="orange")
  #par(new=2)
  y='tin'
  plot  (t(grows_bfs, x, y, 8 ) , col="black", ylim=c(0,50000))
  points(t(grows_bfs, x, y, 4 ) , col="blue")
  points(t(grows_bfs, x, y, 6 ) , col="green")
  points(t(grows_bfs, x, y, 12) , col="violet")
  points(t(grows_bfs, x, y, 16) , col="orange")

  points(t(hopscotch ,x, y, 8 ) , col="red"  )

  lines  (c(-999, 999),c(0,0), col="black" )
  #points(t(grows_rwalkcyc), col="green")
#+END_SRC

#+RESULTS:
: Fehler in maskBS(d, bla) (von unknown!2822KMP#3) : Argument "bla" fehlt (ohne Standardwert)


** COOL 3D Overview
#+BEGIN_SRC R :session :results output
  library(rgl)

  h <- function (d, tcol = 'red')
  {
    chose = d$cap == 1 & d$tl == 256
    plot3d ( d[chose, c('bs','al','tfi')], col=tcol, zlim=c(0,15000) )
  }

  h(grows_bfs)

#+END_SRC

#+RESULTS:


* Overall Plots

#+BEGIN_SRC R :session :results output
  t_all <- function (d)
  {
      CHOSE = d$tl == 256 & d$bs == 8
      #& d$cap == 100000000
      return (d[CHOSE, c('al', 'tin')])
  }
  plot   (t_all(grows_bfs)    , col="red", ylim=c(0,80000))
  points(t_all(grows_rwalk)   , col="blue")
  points(t_all(grows_rwalkcyc), col="green")
  points(t_all(hom2lvl)       , col="orange")
  points(t_all(cuckoo)        , col="violet")
  points(t_all(linprob)       , col="black")
#+END_SRC

#+RESULTS:
