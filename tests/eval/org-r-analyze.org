#+TITLE:  ORG-R-TEST
#+AUTHOR: Tobias Maier
#+EMAIL:  t.maier@kit.edu


* Plotting example
#+begin_src R :results output graphics :file mygraph.png :bg "white"
# Creating a Graph
attach(mtcars)
plot(wt, mpg)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
#+end_src

#+RESULTS:
[[file:mygraph.png]]


* Clear Data
#+BEGIN_SRC R :session
  rm(list=ls())
  getwd()
#+END_SRC

#+RESULTS:
: /home/maier/PHD/SpaceEfficientHashing/Implementation/tests/eval

* Reading Data
#+begin_src R :session :results output
  cols <- c('it', 'al', 'bs', 'tl', 'cap', 'pre', 'n', 'tp', 'tin', 'tfi', 'unsucc', 'lost')
  grows_bfs_raw      <- read.table("../17_11/grows_bfs.time"     , comment.char = "#", col.names = cols)
  grows_rwalk_raw    <- read.table("../17_11/grows_rwalk.time"   , comment.char = "#", col.names = cols)
  #grows_rwalkcyc_raw <- read.table("../11_11-C/grows_rwalkcyc_T", comment.char = "i", col.names = cols)
  #hom2lvl_raw        <- read.table("../11_11-C/hom2lvl_T"       , comment.char = "i", col.names = cols)
  #cuckoo_raw         <- read.table("../11_11-C/cuckoo_T"        , comment.char = "i", col.names = cols)
  #linprob_raw        <- read.table("../11_11-C/linprob_T"       , comment.char = "i", col.names = cols)

  loc_groupby <- function(d)
  {
      return( aggregate(d, by=list(d$bs, d$tl, d$cap, d$al), FUN=mean) )
  }

  grows_bfs      = loc_groupby(grows_bfs_raw)
  grows_rwalk    = loc_groupby(grows_rwalk_raw)
  #grows_rwalkcyc = loc_groupby(grows_rwalkcyc_raw)
  #hom2lvl        = loc_groupby(hom2lvl_raw)
  #cuckoo         = loc_groupby(cuckoo_raw)
  #linprob        = loc_groupby(linprob_raw)
#+end_src

#+RESULTS:

* Some grows Plots

#+BEGIN_SRC R :session :results output
  #graphics :file plot.png
  t <- function (d,x,y, tbs=0,ttl=0,tal=0,tcap=0)
  {
      choseBS = !tbs  || d$bs  == tbs
      choseTL = !ttl  || d$tl  == ttl
      choseAL = !tal  || d$al  == tal
      choseTC = !tcap || d$cap == tcap
      CHOSE   = choseBS & choseTL & choseAL & choseTC
      return (d[CHOSE, c(x, y)])
  }

  y='tin'
  x='tl'

  range_t = range(0, t(grows_bfs,x,y)[y], t(grows_rwalk,x,y)[y]) #, t(grows_rwalkcyc,x,y)[y])

  plot  (t(grows_bfs,x,y)     , col="red", ylim=c(0,10000))
  points(t(grows_rwalk,x,y)   , col="blue")
  lines  (c(-999, 999),c(0,0), col="black")
  #points(t(grows_rwalkcyc), col="green")
#+END_SRC

#+RESULTS:

#+BEGIN_SRC R :session :results output
  library(rgl)

  h <- function (d, _col = 'red')
  {
    chose = d$cap == 1
    plot3d ( d[chose, c('bs','al','tin')], col=_col, zlim = c(0,10000))
  }

  h(grows_bfs)

#+END_SRC

#+RESULTS:
: Fehler: unerwartete Eingabe in "h <- function (d, _"
:  Fehler: unerwartete Eingabe in:
: "  chose = d$cap == 1
:   plot3d ( d[chose, c('bs','al','tin')], col=_"
: Fehler: Unerwartete(s) '}' in "}"
: Fehler: konnte Funktion "h" nicht finden

* Overall Plots

#+BEGIN_SRC R :session :results output
  t_all <- function (d)
  {
      CHOSE = d$tl == 256 & d$bs == 8
      #& d$cap == 100000000
      return (d[CHOSE, c('al', 'tin')])
  }
  plot   (t_all(grows_bfs)    , col="red", ylim=c(0,80000))
  points(t_all(grows_rwalk)   , col="blue")
  points(t_all(grows_rwalkcyc), col="green")
  points(t_all(hom2lvl)       , col="orange")
  points(t_all(cuckoo)        , col="violet")
  points(t_all(linprob)       , col="black")
#+END_SRC

#+RESULTS:
